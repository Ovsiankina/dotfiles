# Sets user-defined palette

palette = "catppuccin_macchiato"

format = """
[](zvm)\
${custom.ZVM_MODE}\
[](bg:dir fg:zvm)\
$directory\
[](fg:dir bg:git)\
$git_branch\
$git_status\
[](fg:git bg:lve)\
$c\
$elixir\
$elm\
$golang\
$gradle\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
$python\
[](fg:lve bg:env)\
$docker_context\
${custom.python-venv}\
[](fg:env)\
$fill\
[](fg:sys)\
$os\
$username\
[](fg:aur bg:sys)\
${custom.combined_updates}\
[](fg:cmd bg:aur)\
$cmd_duration\
[](fg:tim bg:cmd)\
$time\
[](tim)\
[ ]()
$character\
"""

# Disable the blank line at the start of the prompt
add_newline = true

# CMD error symbol
[character]
success_symbol = '[❯](bold green)'
error_symbol = '[](red)'
# Vim modes
# vimcmd_symbol = '[❮](bold purple)'

#          ╭──────────────────────────────────────────────────────────╮
#          │                        Left side                         │
#          ╰──────────────────────────────────────────────────────────╯


[custom.ZVM_MODE]
#command = 'echo $ZVM'  [N] 
command = '''
case $ZVM in
  N)  color="\033[38;5;075m" ;;  # Blue
  I)  color="\033[38;5;112m" ;;  # Green
  V)  color="\033[38;5;141m" ;;  # Purple
  VL) color="\033[38;5;141m" ;;  # Purple
  C)  color="\033[38;5;208m" ;;  # Orange
  R)  color="\033[38;5;167m" ;;  # Red
  *)  ZVM="󱃓"                ;;  # No color
esac
echo "${color}[${ZVM}]"
'''
when = 'true'
style = "bg:zvm fg:txt"
format = '[ ($output )]($style)'
shell = "/bin/zsh"

[directory]
style = "bg:dir fg:txt"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "…/"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "

[git_branch]
symbol = ""
style = "bg:git fg:txt"
format = '[ $symbol $branch ]($style)'

[git_status]
style = "bg:git fg:txt"
format = '[$all_status$ahead_behind ]($style)'

[c]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[elixir]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[elm]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[golang]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[gradle]
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[haskell]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[java]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[julia]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[nodejs]
symbol = ""
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[nim]
symbol = "󰆥 "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[rust]
symbol = ""
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[scala]
symbol = " "
style = "bg:lve fg:txt"
format = '[ $symbol ($version) ]($style)'

[python]
symbol = ''
pyenv_version_name = false
style = "bg:lve fg:txt"
detect_folders = ['.venv', 'venv']
format = '[ ${symbol} ${version} ]($style)'

[docker_context]
symbol = " "
style = "bg:env fg:txt"
format = '[ $symbol $context ]($style)'

[custom.python-venv]
command = 'if [ -n "$VIRTUAL_ENV" ]; then echo "$(basename $VIRTUAL_ENV)"; fi'
when = 'true'
style = "bg:env fg:txt"
format = '[( $output )]($style)'

# Separate left side from right side
[fill]
symbol = ' '

#          ╭──────────────────────────────────────────────────────────╮
#          │                        Right side                        │
#          ╰──────────────────────────────────────────────────────────╯

[username]
show_always = true
style_user = "bg:sys fg:txt"
style_root = "bg:sys fg:txt"
format = '[$user ]($style)'
disabled = true

[os]
style = "bg:sys fg:txt"
disabled = false                      # Disabled by default
format = "[ $symbol $version]($style)"

[os.symbols]
Windows = " "
Arch = "\uf303"

[custom.combined_updates]
command = """
RATE=5;
CACHE_FILE="${HOME}/.cache/aur_update_count.txt";
write_updates () { echo "$(($(checkupdates --nocolor | wc -l)))|$(($(pacman -Qm | aur vercmp | wc -l)))" > $CACHE_FILE;
};
if ! test -f $CACHE_FILE;
then touch $CACHE_FILE && write_updates;
fi;
if test `find $CACHE_FILE -mmin +$RATE`;
then write_updates;
fi;
echo "$(<$CACHE_FILE)"
"""
style = "bg:aur fg:txt"
when = "true"
symbol = "󰮯"
shell = ["bash", "--noprofile", "--norc"]
format = "[ $symbol $output ]($style)"

[cmd_duration]
min_time = 0
style = "bg:env fg:txt"
format = '[ took $duration ]($style)'

[time]
disabled = false
time_format = "%R"              # Hour:Minute Format
style = "bg:tim fg:txt"
format = '[ $time ]($style)'

#          ╭──────────────────────────────────────────────────────────╮
#          │                      Color palette                       │
#          ╰──────────────────────────────────────────────────────────╯

[palettes.color_variables]

[palettes.catppuccin_macchiato]
zvm = "#363a4f" # zsh vim
dir = "#c6a0f6" # directory
git = "#7dc4e4" # git status
lve = "#a6da95" # language version
env = "#eed49f" # virtual env
sys = "#7dc4e4" # system info (os, username, etc.)
cmd = "#eed49f" # cmd duration
tim = "#c6a0f6" # time
txt = "#4C4F69" # text color
aur = "#a6da95" # pacman | AUR updates

macchiato-rosewater = "#f4dbd6"
macchiato-flamingo = "#f0c6c6"
macchiato-pink = "#f5bde6"
macchiato-mauve = "#c6a0f6"
macchiato-red = "#ed8796"
macchiato-maroon = "#ee99a0"
macchiato-peach = "#f5a97f"
macchiato-yellow = "#eed49f"
macchiato-green = "#a6da95"
macchiato-teal = "#8bd5ca"
macchiato-sky = "#91d7e3"
macchiato-sapphire = "#7dc4e4"
macchiato-blue = "#8aadf4"
macchiato-lavender = "#b7bdf8"
macchiato-text = "#cad3f5"
macchiato-subtext1 = "#b8c0e0"
macchiato-subtext0 = "#a5adcb"
macchiato-overlay2 = "#939ab7"
macchiato-overlay1 = "#8087a2"
macchiato-overlay0 = "#6e738d"
macchiato-surface2 = "#5b6078"
macchiato-surface1 = "#494d64"
macchiato-surface0 = "#363a4f"
macchiato-base = "#24273a"
macchiato-mantle = "#1e2030"

macchiato-crust = "#181926"
